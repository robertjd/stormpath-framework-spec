stormpath:
  web:

    basePath: null

    oauth2:
      enabled: true
      uri: "/oauth/token"
      client_credentials:
        enabled: true
        accessToken:
          ttl: 3600
      password:
        enabled: true
        validationStrategy: "local"

    # These options are use to "automatically" expand an account's linked
    # resources (customData, groups) before providing the account context to the
    # deverloper.  This is a conveneince for the developer, so that these
    # resources are pre-warmed in the local cache.  This setting must not affect
    # any respones from the framework, this is internal conveneince only.

    expand:
      apiKeys: false
      customData: false
      directory: false
      groups: false

    accessTokenCookie:
      name: "access_token"
      httpOnly: true

      # See cookie-authentication.md for explanation of
      # how `null` values behave for these properties.
      secure: null
      path: null
      domain: null

    refreshTokenCookie:
      name: "refresh_token"
      httpOnly: true

      # See cookie-authentication.md for explanation of
      # how `null` values behave for these properties.
      secure: null
      path: null
      domain: null

    # By default the Stormpath integration should respond to JSON and HTML
    # requests.  If either is removed from configuration, the integration should
    # not try to handle the response for the given content type.

    produces:
      - text/html
      - application/json

    register:
      enabled: true
      uri: "/register"
      nextUri: "/"
      # autoLogin is possible only if the email verification feature is disabled
      # on the default default account store of the defined Stormpath
      # application.
      autoLogin: false
      form:
        fields:
          givenName:
            enabled: true
            label: "First Name"
            placeholder: "First Name"
            required: true
            type: "text"
          middleName:
            enabled: false
            label: "Middle Name"
            placeholder: "Middle Name"
            required: true
            type: "text"
          surname:
            enabled: true
            label: "Last Name"
            placeholder: "Last Name"
            required: true
            type: "text"
          username:
            enabled: false
            label: "Username"
            placeholder: "Username"
            required: true
            type: "text"
          email:
            enabled: true
            label: "Email"
            placeholder: "Email"
            required: true
            type: "email"
          password:
            enabled: true
            label: "Password"
            placeholder: "Password"
            required: true
            type: "password"
          confirmPassword:
            enabled: false
            label: "Confirm Password"
            placeholder: "Confirm Password"
            required: true
            type: "password"
        fieldOrder:
          - "username"
          - "givenName"
          - "middleName"
          - "surname"
          - "email"
          - "password"
          - "confirmPassword"
      view: "register"

    # Unless verifyEmail.enabled is specifically set to false, the email
    # verification feature must be automatically enabled if the default account
    # store for the defined Stormpath application has the email verification
    # workflow enabled.
    verifyEmail:
      enabled: null
      uri: "/verify"
      nextUri: "/login"
      view: "verify"

    login:
      enabled: true
      uri: "/login"
      nextUri: "/"
      view: "login"
      form:
        fields:
          login:
            enabled: true
            label: "Username or Email"
            placeholder: "Username or Email"
            required: true
            type: "text"
          password:
            enabled: true
            label: "Password"
            placeholder: "Password"
            required: true
            type: "password"
        fieldOrder:
          - "login"
          - "password"

    logout:
      enabled: true
      uri: "/logout"
      nextUri: "/"

    # Unless forgotPassword.enabled is explicitly set to false, this feature
    # will be automatically enabled if the default account store for the defined
    # Stormpath application has the password reset workflow enabled.
    forgotPassword:
      enabled: null
      uri: "/forgot"
      view: "forgot-password"
      nextUri: "/login?status=forgot"

    # Unless changePassword.enabled is explicitly set to false, this feature
    # will be automatically enabled if the default account store for the defined
    # Stormpath application has the password reset workflow enabled.
    changePassword:
      enabled: null
      autoLogin: false
      uri: "/change"
      nextUri: "/login?status=reset"
      view: "change-password"
      errorUri: "/forgot?status=invalid_sptoken"

    # If idSite.enabled is true, the user should be redirected to ID site for
    # login, registration, and password reset.
    idSite:
      enabled: false
      uri: "/idSiteResult"
      nextUri: "/"
      loginUri: ""
      forgotUri: "/#/forgot"
      registerUri: "/#/register"

    socialProviders:
      callbackRoot: "/callbacks"

    # The /me route is for front-end applications, it returns a JSON object with
    # the current user object.  The developer can opt-in to expanding account
    # resources on this enpdoint.
    me:
      enabled: true
      uri: "/me"
      expand:
        apiKeys: false
        customData: false
        directory: false
        groups: false

    # If the developer wants our integration to serve their Single Page
    # Application (SPA) in response to HTML requests for our default routes,
    # such as /login, then they will need to enable this feature and tell us
    # where the root of their SPA is.  This is likely a file path on the
    # filesystem.
    #
    # If the developer does not want our integration to handle their SPA, they
    # will need to configure the framework themeslves and remove 'text/html'
    # from `stormpath.web.produces`, so that we don not serve our default
    # HTML views.
    spa:
      enabled: false
      view: index

    unauthorized:
      view: "unauthorized"

